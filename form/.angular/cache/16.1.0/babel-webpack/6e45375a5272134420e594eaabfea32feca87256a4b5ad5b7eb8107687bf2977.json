{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  signUp(signup) {\n    return this.http.post(\"http://localhost:3000/user/signup\", signup);\n  }\n  verify(body) {\n    console.log(\"inside verify service service\");\n    return this.http.put(\"http://localhost:3000/user/verify\", body);\n  }\n  otp_send(body) {\n    return this.http.post(\"http://localhost:3000/user/sendOtp\", body);\n  }\n  otp_verify(body) {\n    return this.http.post(\"http://localhost:3000/user/verifyOtp\", body);\n  }\n  reset(body) {\n    return this.http.post(\"http://localhost:3000/user/resetPassword\", body);\n  }\n  // forgotPassword(body:any){\n  //   return this.http.post<any>(\"http://localhost:3000/user/forgot\",body)\n  // }\n  login(body) {\n    return this.http.post(\"http://localhost:3000/user/login\", body);\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ServiceService };","map":{"version":3,"names":["ServiceService","constructor","http","signUp","signup","post","verify","body","console","log","put","otp_send","otp_verify","reset","login","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/finstein-emp/Desktop/RegistrationFlowByOtp/form/src/app/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  signUp(signup:any){\n    return this.http.post<any>(\"http://localhost:3000/user/signup\",signup)\n  }\n\n  verify(body:any){\n    console.log(\"inside verify service service\");\n    \n    return this.http.put<any>(\"http://localhost:3000/user/verify\",body)\n\n\n  }\n  otp_send(body:any){\n    return this.http.post(\"http://localhost:3000/user/sendOtp\",body)\n  }\n\n  otp_verify(body:any){\n    return this.http.post(\"http://localhost:3000/user/verifyOtp\",body)\n  }\n  reset(body:any){\n    return this.http.post(\"http://localhost:3000/user/resetPassword\",body)\n  }\n\n  // forgotPassword(body:any){\n  //   return this.http.post<any>(\"http://localhost:3000/user/forgot\",body)\n  // }\n\n  login(body:any){\n    return this.http.post<any>(\"http://localhost:3000/user/login\",body)\n  }\n}\n"],"mappings":";;AAGA,MAGaA,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAACC,MAAU;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,mCAAmC,EAACD,MAAM,CAAC;EACxE;EAEAE,MAAMA,CAACC,IAAQ;IACbC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAE5C,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAM,mCAAmC,EAACH,IAAI,CAAC;EAGrE;EACAI,QAAQA,CAACJ,IAAQ;IACf,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,oCAAoC,EAACE,IAAI,CAAC;EAClE;EAEAK,UAAUA,CAACL,IAAQ;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,sCAAsC,EAACE,IAAI,CAAC;EACpE;EACAM,KAAKA,CAACN,IAAQ;IACZ,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,0CAA0C,EAACE,IAAI,CAAC;EACxE;EAEA;EACA;EACA;EAEAO,KAAKA,CAACP,IAAQ;IACZ,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAM,kCAAkC,EAACE,IAAI,CAAC;EACrE;;AAhCWP,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPrB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}